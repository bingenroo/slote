import 'package:flutter/material.dart';
import 'dart:developer';

/// Simple pixel detector that only logs touched pixels
class PixelDetector extends StatefulWidget {
  const PixelDetector({super.key, required this.child, this.onPixelTouched});

  final Widget child;
  final Function(Offset pixel)? onPixelTouched;

  @override
  State<PixelDetector> createState() => _PixelDetectorState();
}

class _PixelDetectorState extends State<PixelDetector> {
  final List<Offset> touchedPixels = [];

  void _capturePixel(Offset point) {
    // Round to actual pixel coordinates
    final pixelX = point.dx.round();
    final pixelY = point.dy.round();
    final pixelOffset = Offset(pixelX.toDouble(), pixelY.toDouble());

    // Avoid duplicate consecutive pixels
    if (touchedPixels.isEmpty || touchedPixels.last != pixelOffset) {
      touchedPixels.add(pixelOffset);

      // Log the touched pixel
      log('Touched Pixel: x=$pixelX, y=$pixelY');
      log('Total pixels touched: ${touchedPixels.length}');

      // Callback if provided
      widget.onPixelTouched?.call(pixelOffset);
    }
  }

  void _handlePanStart(DragStartDetails details) {
    _capturePixel(details.localPosition);
  }

  void _handlePanUpdate(DragUpdateDetails details) {
    _capturePixel(details.localPosition);
  }

  void _handlePanEnd(DragEndDetails details) {
    log('Touch ended - Total unique pixels: ${touchedPixels.length}');
  }

  void _handleTap(TapDownDetails details) {
    _capturePixel(details.localPosition);
    log(
      'Single tap at pixel: x=${details.localPosition.dx.round()}, y=${details.localPosition.dy.round()}',
    );
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTapDown: _handleTap,
      onPanStart: _handlePanStart,
      onPanUpdate: _handlePanUpdate,
      onPanEnd: _handlePanEnd,
      child: widget.child,
    );
  }
}

/// Extension methods for easy usage
extension PixelDetectorExtension on Widget {
  Widget withPixelDetection({Function(Offset pixel)? onPixelTouched}) {
    return PixelDetector(onPixelTouched: onPixelTouched, child: this);
  }
}
